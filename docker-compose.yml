services:
  db:
    image: postgres:16
    restart: unless-stopped
    container_name: collabboard_db
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - db_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER}"]
      interval: 10s
      retries: 5
    networks:
      - collabboard

  api:
    build:
      context: ./backend
      dockerfile: Dockerfile
    restart: unless-stopped
    container_name: collabboard_api
    ports:
      - "${API_PORT}:${API_PORT}"
    environment:
      POSTGRES_HOST: db
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      API_PORT: ${API_PORT}
      JWT_SECRET: ${JWT_SECRET}
    depends_on:
      db:
        condition: service_healthy
    networks:
      - collabboard

  web:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    restart: unless-stopped
    ports:
      - "5173:5173"
    environment:
      VITE_API_URL: "http://localhost:${API_PORT}/api"
      VITE_WS_URL: "ws://localhost:${API_PORT}/ws/board"
    depends_on:
      api:
        condition: service_started
    networks:
      - collabboard

volumes:
  db_data:

networks:
  collabboard:
    driver: bridge
